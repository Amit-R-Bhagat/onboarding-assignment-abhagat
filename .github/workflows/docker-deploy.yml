name: Docker Image CI

on:
  push:
    branches: [ main ]

jobs:

  calculate-version:
    name: Calculate Version
    runs-on: ubuntu-latest
    outputs:
      semVer: ${{ steps.gitversion.outputs.semVer }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    
    - name: Setup GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.7
      with:
        versionSpec: '5.x'
      
    - name: Determine Version
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.9.7
      with:
        useConfigFile: true
        configFilePath: './gitversion.yaml'
        
  display-semver:
    name: Display Semantic Version
    runs-on: ubuntu-latest
    needs: calculate-version
    env:
      SEMVER: ${{ needs.calculate-version.outputs.semVer }}
    outputs:
      semVer: ${{ needs.calculate-version.outputs.semVer }}
    steps:
      - name: Display version
        run: |
          echo semVer: $SEMVER
          
  build:
    name: deploy docker-image
    runs-on: ubuntu-latest
    needs: display-semver
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
        
      - name: login to amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        
      - name: Build Docker Image
        env:
          IMAGE_NAME: onboarding-assignment-abhagat
          VERSION: ${{ needs.display-semver.outputs.semVer }}
        run: |
          docker build . --file Dockerfile -t ${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          echo ${{ steps.login-ecr.outputs.registry }}
      
      - name: Push to AWS ECR
        env:
          IMAGE_NAME: onboarding-assignment-abhagat
          VERSION: ${{ needs.display-semver.outputs.semVer }}
          ECR: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker tag ${{ env.IMAGE_NAME }}:${{ env.VERSION }} '${{ env.ECR }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}'
          docker push ${{ env.ECR }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
    
      
      
    
    
